{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport data from \"../../data/data.json\";\nexport const restaurantsSlice = createSlice({\n  name: \"restaurants\",\n  initialState: {\n    initialValue: data.restaurants,\n    value: data.restaurants\n  },\n  reducers: {\n    filter: (state, action) => {\n      switch (action.payload) {\n        case \"all\":\n          state.value = state.initialValue;\n          break;\n        case \"new\":\n          state.value = state.initialValue.filter(e => e.opening_year >= new Date().getFullYear());\n          break;\n        case \"most_popular\":\n          state.value = state.initialValue.filter(e => e.rating > 4);\n          break;\n        case \"open_now\":\n          state.value = state.initialValue.filter(e => e.hours[0] < new Date().getHours() && e.hours[1] > new Date().getHours());\n          break;\n      }\n    }\n  }\n});\nexport const {\n  filter\n} = restaurantsSlice.actions;\nexport default restaurantsSlice.reducer;","map":{"version":3,"names":["createSlice","data","restaurantsSlice","name","initialState","initialValue","restaurants","value","reducers","filter","state","action","payload","e","opening_year","Date","getFullYear","rating","hours","getHours","actions","reducer"],"sources":["C:/Users/Assaf Katz/Desktop/Moveo full-stack course/Projects/epicure-project/src/store/slicers/restaurantsSlicer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\nimport data from \"../../data/data.json\";\n\nexport const restaurantsSlice = createSlice({\n  name: \"restaurants\",\n  initialState: {\n    initialValue: data.restaurants,\n    value: data.restaurants,\n  },\n  reducers: {\n    filter: (state, action) => {\n      switch (action.payload) {\n        case \"all\":\n          state.value = state.initialValue;\n          break;\n        case \"new\":\n          state.value = state.initialValue.filter(\n            (e) => e.opening_year >= new Date().getFullYear()\n          );\n          break;\n        case \"most_popular\":\n          state.value = state.initialValue.filter((e) => e.rating > 4);\n          break;\n        case \"open_now\":\n          state.value = state.initialValue.filter(\n            (e) =>\n              e.hours[0] < new Date().getHours() &&\n              e.hours[1] > new Date().getHours()\n          );\n          break;\n      }\n    },\n  },\n});\n\nexport const { filter } = restaurantsSlice.actions;\n\nexport default restaurantsSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,IAAI,MAAM,sBAAsB;AAEvC,OAAO,MAAMC,gBAAgB,GAAGF,WAAW,CAAC;EAC1CG,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACZC,YAAY,EAAEJ,IAAI,CAACK,WAAW;IAC9BC,KAAK,EAAEN,IAAI,CAACK;EACd,CAAC;EACDE,QAAQ,EAAE;IACRC,MAAM,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzB,QAAQA,MAAM,CAACC,OAAO;QACpB,KAAK,KAAK;UACRF,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACL,YAAY;UAChC;QACF,KAAK,KAAK;UACRK,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACL,YAAY,CAACI,MAAM,CACpCI,CAAC,IAAKA,CAAC,CAACC,YAAY,IAAI,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,CAClD;UACD;QACF,KAAK,cAAc;UACjBN,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACL,YAAY,CAACI,MAAM,CAAEI,CAAC,IAAKA,CAAC,CAACI,MAAM,GAAG,CAAC,CAAC;UAC5D;QACF,KAAK,UAAU;UACbP,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACL,YAAY,CAACI,MAAM,CACpCI,CAAC,IACAA,CAAC,CAACK,KAAK,CAAC,CAAC,CAAC,GAAG,IAAIH,IAAI,EAAE,CAACI,QAAQ,EAAE,IAClCN,CAAC,CAACK,KAAK,CAAC,CAAC,CAAC,GAAG,IAAIH,IAAI,EAAE,CAACI,QAAQ,EAAE,CACrC;UACD;MAAM;IAEZ;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV;AAAO,CAAC,GAAGP,gBAAgB,CAACkB,OAAO;AAElD,eAAelB,gBAAgB,CAACmB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}