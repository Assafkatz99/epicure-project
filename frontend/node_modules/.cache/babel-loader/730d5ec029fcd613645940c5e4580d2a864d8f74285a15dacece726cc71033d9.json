{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n// export const fetchDishes: any = createAsyncThunk(\n//   \"chefs/fetchChefs\",\n//   async () => {\n//     const response = await axios.get(\"http://localhost:8000/api/chefs/\");\n//     return response.data;\n//   }\n// );\n\nexport const dishesSlice = createSlice({\n  name: \"dishes\",\n  initialState: {\n    initialValue: [],\n    value: [],\n    current_dishes: []\n  },\n  reducers: {\n    filterDishes: (state, action) => {\n      state.value = state.initialValue.filter(dish => action.payload.dishes_id_list.includes(dish.id));\n      switch (action.payload.dish_timing) {\n        case \"breakfast\":\n          state.value = state.value.filter(dish => dish.dishTiming.breakfast);\n          break;\n        case \"lunch\":\n          state.value = state.value.filter(dish => dish.dishTiming.lunch);\n          break;\n        case \"dinner\":\n          state.value = state.value.filter(dish => dish.dishTiming.dinner);\n          break;\n        case \"\":\n          break;\n      }\n    }\n  }\n  // extraReducers: (builder) => {\n  //   builder\n  //     .addCase(fetchDishes.pending, (state, action) => {\n  //       console.log(\"pending\")\n  //     })\n  //     .addCase(fetchDishes.fulfilled, (state, action) => {\n  //       state.value = action.payload;\n  //       state.initialValue = action.payload;\n  //       console.log(action.payload);\n  //       console.log(\"WORKED\");\n  //     })\n  //     .addCase(fetchDishes.rejected, (state, action) => {\n  //       console.log(\"rejected\");\n  //       console.log(action.error.message);\n  //     });\n  // },\n});\n\nexport const {\n  filterDishes\n} = dishesSlice.actions;\nexport default dishesSlice.reducer;","map":{"version":3,"names":["createSlice","dishesSlice","name","initialState","initialValue","value","current_dishes","reducers","filterDishes","state","action","filter","dish","payload","dishes_id_list","includes","id","dish_timing","dishTiming","breakfast","lunch","dinner","actions","reducer"],"sources":["C:/Users/Assaf Katz/Desktop/Moveo full-stack course/Projects/epicure-project/frontend/src/store/slicers/dishesSilcer.tsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { IDish } from \"../../typs/interfaces/slicersInterfaces\";\r\n// export const fetchDishes: any = createAsyncThunk(\r\n//   \"chefs/fetchChefs\",\r\n//   async () => {\r\n//     const response = await axios.get(\"http://localhost:8000/api/chefs/\");\r\n//     return response.data;\r\n//   }\r\n// );\r\n\r\nexport const dishesSlice = createSlice({\r\n  name: \"dishes\",\r\n  initialState: {\r\n    initialValue: [],\r\n    value: [],\r\n    current_dishes: [],\r\n  },\r\n  reducers: {\r\nfilterDishes: (state, action) => {\r\n  state.value = state.initialValue.filter((dish: IDish) => action.payload.dishes_id_list.includes(dish.id));\r\n\r\n  switch (action.payload.dish_timing) {\r\n    case \"breakfast\":\r\n      state.value = state.value.filter((dish: IDish) => dish.dishTiming.breakfast)\r\n      break;\r\n    case \"lunch\":\r\n      state.value = state.value.filter((dish: IDish) => dish.dishTiming.lunch)\r\n      break;\r\n    case \"dinner\":\r\n      state.value = state.value.filter((dish: IDish) => dish.dishTiming.dinner)\r\n      break;\r\n    case \"\":\r\n      break;\r\n  }\r\n},\r\n  },\r\n  // extraReducers: (builder) => {\r\n  //   builder\r\n  //     .addCase(fetchDishes.pending, (state, action) => {\r\n  //       console.log(\"pending\")\r\n  //     })\r\n  //     .addCase(fetchDishes.fulfilled, (state, action) => {\r\n  //       state.value = action.payload;\r\n  //       state.initialValue = action.payload;\r\n  //       console.log(action.payload);\r\n  //       console.log(\"WORKED\");\r\n  //     })\r\n  //     .addCase(fetchDishes.rejected, (state, action) => {\r\n  //       console.log(\"rejected\");\r\n  //       console.log(action.error.message);\r\n  //     });\r\n  // },\r\n});\r\n\r\nexport const { filterDishes } = dishesSlice.actions;\r\nexport default dishesSlice.reducer;\r\n"],"mappings":"AAAA,SAA2BA,WAAW,QAAQ,kBAAkB;AAGhE;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,WAAW,GAAGD,WAAW,CAAC;EACrCE,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE,EAAE;IACTC,cAAc,EAAE;EAClB,CAAC;EACDC,QAAQ,EAAE;IACZC,YAAY,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACL,YAAY,CAACO,MAAM,CAAEC,IAAW,IAAKF,MAAM,CAACG,OAAO,CAACC,cAAc,CAACC,QAAQ,CAACH,IAAI,CAACI,EAAE,CAAC,CAAC;MAEzG,QAAQN,MAAM,CAACG,OAAO,CAACI,WAAW;QAChC,KAAK,WAAW;UACdR,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACM,MAAM,CAAEC,IAAW,IAAKA,IAAI,CAACM,UAAU,CAACC,SAAS,CAAC;UAC5E;QACF,KAAK,OAAO;UACVV,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACM,MAAM,CAAEC,IAAW,IAAKA,IAAI,CAACM,UAAU,CAACE,KAAK,CAAC;UACxE;QACF,KAAK,QAAQ;UACXX,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACM,MAAM,CAAEC,IAAW,IAAKA,IAAI,CAACM,UAAU,CAACG,MAAM,CAAC;UACzE;QACF,KAAK,EAAE;UACL;MAAM;IAEZ;EACE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACF,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAEb;AAAa,CAAC,GAAGP,WAAW,CAACqB,OAAO;AACnD,eAAerB,WAAW,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}