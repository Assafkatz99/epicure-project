{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport data from \"../../data/data.json\";\nexport const dishesSlice = createSlice({\n  name: \"dishes\",\n  initialState: {\n    initialValue: data.dishes,\n    value: data.dishes,\n    current_dishes: data.dishes\n  },\n  reducers: {\n    filterDishes: (state, action) => {\n      state.value = state.initialValue.filter(dish => action.payload.dishes_id_list.includes(dish.id));\n      switch (action.payload.dish_timing) {\n        case \"breakfast\":\n          state.value = state.value.filter(dish => dish.dishTiming.breakfast);\n          console.log({\n            \"morning \": state.value\n          });\n          break;\n        case \"lunch\":\n          state.value = state.value.filter(dish => dish.dishTiming.lunch);\n          break;\n        case \"dinner\":\n          state.value = state.value.filter(dish => dish.dishTiming.dinner);\n          break;\n        case \"\":\n          break;\n      }\n    }\n  }\n});\nexport const {\n  filterDishes\n} = dishesSlice.actions;\nexport default dishesSlice.reducer;","map":{"version":3,"names":["createSlice","data","dishesSlice","name","initialState","initialValue","dishes","value","current_dishes","reducers","filterDishes","state","action","filter","dish","payload","dishes_id_list","includes","id","dish_timing","dishTiming","breakfast","console","log","lunch","dinner","actions","reducer"],"sources":["C:/Users/Assaf Katz/Desktop/Moveo full-stack course/Projects/epicure-project/src/store/slicers/dishesSilcer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { stat } from \"fs\";\r\nimport data from \"../../data/data.json\";\r\nimport { IDish } from \"../../typs/interfaces/slicersInterfaces\";\r\n\r\nexport const dishesSlice = createSlice({\r\n  name: \"dishes\",\r\n  initialState: {\r\n    initialValue: data.dishes,\r\n    value: data.dishes,\r\n    current_dishes: data.dishes,\r\n  },\r\n  reducers: {\r\n    filterDishes: (state, action) => {\r\n      state.value = state.initialValue.filter(dish => action.payload.dishes_id_list.includes(dish.id));\r\n\r\n      switch (action.payload.dish_timing) {\r\n        case \"breakfast\":\r\n          state.value = state.value.filter(dish => dish.dishTiming.breakfast)\r\n          console.log({\"morning \" : state.value})\r\n          break;\r\n          case \"lunch\":\r\n          state.value = state.value.filter(dish => dish.dishTiming.lunch)\r\n          break;\r\n          case \"dinner\":\r\n          state.value = state.value.filter(dish => dish.dishTiming.dinner)\r\n          break;\r\n          case \"\":\r\n          break;\r\n            }\r\n},\r\n  },\r\n});\r\n\r\nexport const { filterDishes } = dishesSlice.actions;\r\nexport default dishesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,IAAI,MAAM,sBAAsB;AAGvC,OAAO,MAAMC,WAAW,GAAGF,WAAW,CAAC;EACrCG,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,YAAY,EAAEJ,IAAI,CAACK,MAAM;IACzBC,KAAK,EAAEN,IAAI,CAACK,MAAM;IAClBE,cAAc,EAAEP,IAAI,CAACK;EACvB,CAAC;EACDG,QAAQ,EAAE;IACRC,YAAY,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACN,YAAY,CAACQ,MAAM,CAACC,IAAI,IAAIF,MAAM,CAACG,OAAO,CAACC,cAAc,CAACC,QAAQ,CAACH,IAAI,CAACI,EAAE,CAAC,CAAC;MAEhG,QAAQN,MAAM,CAACG,OAAO,CAACI,WAAW;QAChC,KAAK,WAAW;UACdR,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACM,UAAU,CAACC,SAAS,CAAC;UACnEC,OAAO,CAACC,GAAG,CAAC;YAAC,UAAU,EAAGZ,KAAK,CAACJ;UAAK,CAAC,CAAC;UACvC;QACA,KAAK,OAAO;UACZI,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACM,UAAU,CAACI,KAAK,CAAC;UAC/D;QACA,KAAK,QAAQ;UACbb,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACM,UAAU,CAACK,MAAM,CAAC;UAChE;QACA,KAAK,EAAE;UACP;MAAM;IAEhB;EACE;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEf;AAAa,CAAC,GAAGR,WAAW,CAACwB,OAAO;AACnD,eAAexB,WAAW,CAACyB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}