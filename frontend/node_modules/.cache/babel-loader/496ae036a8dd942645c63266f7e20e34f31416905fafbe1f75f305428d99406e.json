{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport data from \"../../data/data.json\";\nexport const dishesSlice = createSlice({\n  name: \"dishes\",\n  initialState: {\n    initialValue: data.dishes,\n    value: data.dishes\n  },\n  reducers: {\n    filterDishes: (state, action) => {\n      switch (action.payload.dish_timing) {\n        case \"breakfast\":\n          // state.value = state.initialValue.filter((dish) => dish.dishTiming.breakfast);\n          const rest_dishes = action.payload.dishes_id_list.map(dish_id => {\n            const specific_dish = state.initialValue.find(dish => dish.id == dish_id);\n            if (specific_dish !== null && specific_dish !== void 0 && specific_dish.dishTiming.breakfast) {}\n          });\n          break;\n        case \"lunch\":\n          state.value = state.initialValue.filter(dish => dish.dishTiming.lunch);\n          break;\n        case \"dinner\":\n          state.value = state.initialValue.filter(dish => dish.dishTiming.dinner);\n          break;\n        case \"\":\n          state.value = state.initialValue;\n          break;\n      }\n    }\n  }\n});\nexport const {\n  filterDishes\n} = dishesSlice.actions;\nexport default dishesSlice.reducer;","map":{"version":3,"names":["createSlice","data","dishesSlice","name","initialState","initialValue","dishes","value","reducers","filterDishes","state","action","payload","dish_timing","rest_dishes","dishes_id_list","map","dish_id","specific_dish","find","dish","id","dishTiming","breakfast","filter","lunch","dinner","actions","reducer"],"sources":["C:/Users/Assaf Katz/Desktop/Moveo full-stack course/Projects/epicure-project/src/store/slicers/dishesSilcer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { stat } from \"fs\";\r\nimport data from \"../../data/data.json\";\r\nimport { IDish } from \"../../typs/interfaces/slicersInterfaces\";\r\n\r\nexport const dishesSlice = createSlice({\r\n  name: \"dishes\",\r\n  initialState: {\r\n    initialValue: data.dishes,\r\n    value: data.dishes,\r\n  },\r\n  reducers: {\r\n    filterDishes: (state, action) => {\r\n      switch (action.payload.dish_timing) {\r\n        case \"breakfast\":\r\n          // state.value = state.initialValue.filter((dish) => dish.dishTiming.breakfast);\r\n          const rest_dishes = action.payload.dishes_id_list.map((dish_id:number) => {\r\n            const specific_dish = state.initialValue.find((dish) => dish.id == dish_id)\r\n            if (specific_dish?.dishTiming.breakfast){\r\n              \r\n            }\r\n          })\r\n          break;\r\n        case \"lunch\":\r\n          state.value = state.initialValue.filter((dish) => dish.dishTiming.lunch);\r\n          break;\r\n        case \"dinner\":\r\n          state.value = state.initialValue.filter((dish) => dish.dishTiming.dinner);\r\n          break;\r\n        case \"\":\r\n          state.value = state.initialValue\r\n          break;\r\n      }\r\n    }\r\n  },\r\n});\r\n\r\n\r\nexport const { filterDishes } = dishesSlice.actions;\r\nexport default dishesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,IAAI,MAAM,sBAAsB;AAGvC,OAAO,MAAMC,WAAW,GAAGF,WAAW,CAAC;EACrCG,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,YAAY,EAAEJ,IAAI,CAACK,MAAM;IACzBC,KAAK,EAAEN,IAAI,CAACK;EACd,CAAC;EACDE,QAAQ,EAAE;IACRC,YAAY,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/B,QAAQA,MAAM,CAACC,OAAO,CAACC,WAAW;QAChC,KAAK,WAAW;UACd;UACA,MAAMC,WAAW,GAAGH,MAAM,CAACC,OAAO,CAACG,cAAc,CAACC,GAAG,CAAEC,OAAc,IAAK;YACxE,MAAMC,aAAa,GAAGR,KAAK,CAACL,YAAY,CAACc,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,IAAIJ,OAAO,CAAC;YAC3E,IAAIC,aAAa,aAAbA,aAAa,eAAbA,aAAa,CAAEI,UAAU,CAACC,SAAS,EAAC,CAExC;UACF,CAAC,CAAC;UACF;QACF,KAAK,OAAO;UACVb,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACL,YAAY,CAACmB,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACE,UAAU,CAACG,KAAK,CAAC;UACxE;QACF,KAAK,QAAQ;UACXf,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACL,YAAY,CAACmB,MAAM,CAAEJ,IAAI,IAAKA,IAAI,CAACE,UAAU,CAACI,MAAM,CAAC;UACzE;QACF,KAAK,EAAE;UACLhB,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACL,YAAY;UAChC;MAAM;IAEZ;EACF;AACF,CAAC,CAAC;AAGF,OAAO,MAAM;EAAEI;AAAa,CAAC,GAAGP,WAAW,CAACyB,OAAO;AACnD,eAAezB,WAAW,CAAC0B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}