{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport data from \"../../data/data.json\";\nexport const chefsSlice = createSlice({\n  name: \"chefs\",\n  initialState: {\n    initialValue: data.chefs,\n    value: data.chefs,\n    cotw_id: data.chef_of_the_week_id,\n    rest_data: data.restaurants\n  },\n  reducers: {\n    getChefNameByRestId: (state, action) => {\n      var _state$initialValue$f, _state$initialValue$f2;\n      return ((_state$initialValue$f = state.initialValue.find(chef => chef.restaurant_ids.includes(action.payload))) === null || _state$initialValue$f === void 0 ? void 0 : _state$initialValue$f.first_name) + \" \" + ((_state$initialValue$f2 = state.initialValue.find(chef => chef.restaurant_ids.includes(action.payload))) === null || _state$initialValue$f2 === void 0 ? void 0 : _state$initialValue$f2.last_name);\n    }\n  }\n});\nexport const {\n  getChefNameByRestId\n} = chefsSlice.actions;\nexport default chefsSlice.reducer;","map":{"version":3,"names":["createSlice","data","chefsSlice","name","initialState","initialValue","chefs","value","cotw_id","chef_of_the_week_id","rest_data","restaurants","reducers","getChefNameByRestId","state","action","find","chef","restaurant_ids","includes","payload","first_name","last_name","actions","reducer"],"sources":["C:/Users/Assaf Katz/Desktop/Moveo full-stack course/Projects/epicure-project/src/store/slicers/chefsSlicer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { Action } from \"@remix-run/router\";\r\nimport data from \"../../data/data.json\";\r\n\r\nexport const chefsSlice = createSlice({\r\n    name: \"chefs\",\r\n    initialState: {\r\n      initialValue: data.chefs,\r\n      value: data.chefs,\r\n      cotw_id: data.chef_of_the_week_id,\r\n      rest_data: data.restaurants,\r\n    },\r\n    reducers: {\r\n      getChefNameByRestId : (state, action) => {\r\n        return (\r\n          state.initialValue.find((chef) =>\r\n            chef.restaurant_ids.includes(action.payload)\r\n          )?.first_name +\r\n          \" \" +\r\n          state.initialValue.find((chef) =>\r\n            chef.restaurant_ids.includes(action.payload)\r\n          )?.last_name\r\n        );\r\n      },\r\n    },\r\n  });\r\n  \r\n\r\nexport const {getChefNameByRestId} = chefsSlice.actions;\r\n\r\nexport default chefsSlice.reducer;\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAOC,IAAI,MAAM,sBAAsB;AAEvC,OAAO,MAAMC,UAAU,GAAGF,WAAW,CAAC;EAClCG,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,YAAY,EAAEJ,IAAI,CAACK,KAAK;IACxBC,KAAK,EAAEN,IAAI,CAACK,KAAK;IACjBE,OAAO,EAAEP,IAAI,CAACQ,mBAAmB;IACjCC,SAAS,EAAET,IAAI,CAACU;EAClB,CAAC;EACDC,QAAQ,EAAE;IACRC,mBAAmB,EAAG,CAACC,KAAK,EAAEC,MAAM,KAAK;MAAA;MACvC,OACE,0BAAAD,KAAK,CAACT,YAAY,CAACW,IAAI,CAAEC,IAAI,IAC3BA,IAAI,CAACC,cAAc,CAACC,QAAQ,CAACJ,MAAM,CAACK,OAAO,CAAC,CAC7C,0DAFD,sBAEGC,UAAU,IACb,GAAG,8BACHP,KAAK,CAACT,YAAY,CAACW,IAAI,CAAEC,IAAI,IAC3BA,IAAI,CAACC,cAAc,CAACC,QAAQ,CAACJ,MAAM,CAACK,OAAO,CAAC,CAC7C,2DAFD,uBAEGE,SAAS;IAEhB;EACF;AACF,CAAC,CAAC;AAGJ,OAAO,MAAM;EAACT;AAAmB,CAAC,GAAGX,UAAU,CAACqB,OAAO;AAEvD,eAAerB,UAAU,CAACsB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}