{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchRestaurants = createAsyncThunk(\"restaurants/fetchRestaurants\", async () => {\n  const response = await axios.get(\"http://localhost:8000/api/restaurants/\");\n  return response.data;\n});\nexport const restaurantsSlice = createSlice({\n  name: \"restaurants\",\n  initialState: {\n    initialValue: [],\n    value: []\n  },\n  reducers: {\n    filter: (state, action) => {\n      switch (action.payload) {\n        case \"all\":\n          state.value = state.initialValue;\n          break;\n        case \"new\":\n          state.value = state.initialValue.filter(rest => rest.opening_year >= new Date().getFullYear());\n          break;\n        case \"most_popular\":\n          state.value = state.initialValue.filter(rest => rest.rating > 4);\n          break;\n        case \"open_now\":\n          state.value = state.initialValue.filter(rest => rest.hours[0] < new Date().getHours() && rest.hours[1] > new Date().getHours());\n          break;\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchRestaurants.pending, (state, action) => {\n      console.log(\"pending\");\n    }).addCase(fetchRestaurants.fulfilled, (state, action) => {\n      state.value = action.payload;\n      state.initialValue = action.payload;\n      console.log(action.payload);\n      console.log(\"WORKED\");\n    }).addCase(fetchRestaurants.rejected, (state, action) => {\n      console.log(\"rejected\");\n      console.log(action.error.message);\n    });\n  }\n});\nexport const {\n  filter\n} = restaurantsSlice.actions;\nexport default restaurantsSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","fetchRestaurants","response","get","data","restaurantsSlice","name","initialState","initialValue","value","reducers","filter","state","action","payload","rest","opening_year","Date","getFullYear","rating","hours","getHours","extraReducers","builder","addCase","pending","console","log","fulfilled","rejected","error","message","actions","reducer"],"sources":["C:/Users/Assaf Katz/Desktop/Moveo full-stack course/Projects/epicure-project/frontend/src/store/slicers/restaurantsSlicer.tsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { IRestaurant } from \"../../typs/interfaces/slicersInterfaces\";\r\n\r\nexport const fetchRestaurants: any = createAsyncThunk(\r\n  \"restaurants/fetchRestaurants\",\r\n  async () => {\r\n    const response = await axios.get(\"http://localhost:8000/api/restaurants/\");\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const restaurantsSlice = createSlice({\r\n  name: \"restaurants\",\r\n  initialState: {\r\n    initialValue: [],\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    filter: (state, action) => {\r\n      switch (action.payload) {\r\n        case \"all\":\r\n          state.value = state.initialValue;\r\n          break;\r\n        case \"new\":\r\n          state.value = state.initialValue.filter(\r\n            (rest : IRestaurant) => rest.opening_year >= new Date().getFullYear()\r\n          );\r\n          break;\r\n        case \"most_popular\":\r\n          state.value = state.initialValue.filter((rest : IRestaurant) => rest.rating > 4);\r\n          break;\r\n        case \"open_now\":\r\n          state.value = state.initialValue.filter(\r\n            (rest : IRestaurant) =>\r\n              rest.hours[0] < new Date().getHours() &&\r\n              rest.hours[1] > new Date().getHours()\r\n          );\r\n          break;\r\n      }\r\n    },\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchRestaurants.pending, (state, action) => {\r\n        console.log(\"pending\")\r\n      })\r\n      .addCase(fetchRestaurants.fulfilled, (state, action) => {\r\n        state.value = action.payload;\r\n        state.initialValue = action.payload;\r\n        console.log(action.payload);\r\n        console.log(\"WORKED\");\r\n      })\r\n      .addCase(fetchRestaurants.rejected, (state, action) => {\r\n        console.log(\"rejected\");\r\n        console.log(action.error.message);\r\n      });\r\n    }\r\n});\r\n\r\nexport const { filter } = restaurantsSlice.actions;\r\n\r\nexport default restaurantsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAGzB,OAAO,MAAMC,gBAAqB,GAAGH,gBAAgB,CACnD,8BAA8B,EAC9B,YAAY;EACV,MAAMI,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,wCAAwC,CAAC;EAC1E,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CACF;AAED,OAAO,MAAMC,gBAAgB,GAAGN,WAAW,CAAC;EAC1CO,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,MAAM,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzB,QAAQA,MAAM,CAACC,OAAO;QACpB,KAAK,KAAK;UACRF,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACJ,YAAY;UAChC;QACF,KAAK,KAAK;UACRI,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACJ,YAAY,CAACG,MAAM,CACpCI,IAAkB,IAAKA,IAAI,CAACC,YAAY,IAAI,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,CACtE;UACD;QACF,KAAK,cAAc;UACjBN,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACJ,YAAY,CAACG,MAAM,CAAEI,IAAkB,IAAKA,IAAI,CAACI,MAAM,GAAG,CAAC,CAAC;UAChF;QACF,KAAK,UAAU;UACbP,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACJ,YAAY,CAACG,MAAM,CACpCI,IAAkB,IACjBA,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC,GAAG,IAAIH,IAAI,EAAE,CAACI,QAAQ,EAAE,IACrCN,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC,GAAG,IAAIH,IAAI,EAAE,CAACI,QAAQ,EAAE,CACxC;UACD;MAAM;IAEZ;EACF,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAACvB,gBAAgB,CAACwB,OAAO,EAAE,CAACb,KAAK,EAAEC,MAAM,KAAK;MACpDa,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IACxB,CAAC,CAAC,CACDH,OAAO,CAACvB,gBAAgB,CAAC2B,SAAS,EAAE,CAAChB,KAAK,EAAEC,MAAM,KAAK;MACtDD,KAAK,CAACH,KAAK,GAAGI,MAAM,CAACC,OAAO;MAC5BF,KAAK,CAACJ,YAAY,GAAGK,MAAM,CAACC,OAAO;MACnCY,OAAO,CAACC,GAAG,CAACd,MAAM,CAACC,OAAO,CAAC;MAC3BY,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACvB,CAAC,CAAC,CACDH,OAAO,CAACvB,gBAAgB,CAAC4B,QAAQ,EAAE,CAACjB,KAAK,EAAEC,MAAM,KAAK;MACrDa,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvBD,OAAO,CAACC,GAAG,CAACd,MAAM,CAACiB,KAAK,CAACC,OAAO,CAAC;IACnC,CAAC,CAAC;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEpB;AAAO,CAAC,GAAGN,gBAAgB,CAAC2B,OAAO;AAElD,eAAe3B,gBAAgB,CAAC4B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}