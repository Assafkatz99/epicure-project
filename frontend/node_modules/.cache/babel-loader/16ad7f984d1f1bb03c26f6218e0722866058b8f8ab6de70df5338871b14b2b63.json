{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Assaf Katz\\\\Desktop\\\\Moveo full-stack course\\\\Projects\\\\epicure-project\\\\frontend\\\\src\\\\components\\\\restaurants\\\\restaurants_components\\\\SingleRestaurant.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport Footer from \"../../homepage/hp-components/footer/Footer\";\nimport Navbar from \"../../navbar/Navbar\";\nimport { DishTimeSortingButton } from \"../../../typs/buttons/Styled_buttons\";\nimport \"./SingleRestaurant.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Card from \"../../homepage/hp-components/card/Card\";\nimport { useParams } from \"react-router-dom\";\nimport Modal from \"../../modal/Modal\";\nimport { fetchDishes, filterDishes } from \"../../../store/slicers/dishesSilcer\";\nimport { fetchChefs } from \"../../../store/slicers/chefsSlicer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SingleRestaurant = () => {\n  _s();\n  const [showModal, setShowModal] = useState(false);\n  const [DishIdForModal, setDishIdForModal] = useState(0);\n  const dishes = useSelector(state => state.dishes.value);\n  const chefs = useSelector(state => state.chefs.value);\n  const restaurants = useSelector(state => state.restaurants.value);\n  useEffect(() => {\n    dispatch(fetchChefs());\n    dispatch(fetchDishes());\n  }, []);\n  const rest_id = useParams()[\"single\"];\n  const specific_rest = restaurants.find(rest => rest.id == rest_id);\n  // const chef = chefs.find((chef: IChef) =>\n  //   chef.restaurant_ids.includes(Number(rest_id))\n  // );\n  const chef = chefs.find(chef => chef.restaurant_ids && chef.restaurant_ids.includes(Number(rest_id)));\n  const chef_name = `${chef === null || chef === void 0 ? void 0 : chef.first_name} ${chef === null || chef === void 0 ? void 0 : chef.last_name}`;\n  const handleCloseModal = () => {\n    setShowModal(false);\n  };\n  const [SelectedDishTimeSortingButton, SetSelectedDishTimeSortingButton] = useState(\"\");\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(filterDishes({\n      dish_timing: SelectedDishTimeSortingButton,\n      dishes_id_list: specific_rest === null || specific_rest === void 0 ? void 0 : specific_rest.dish_ids\n    }));\n  }, [SelectedDishTimeSortingButton]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: specific_rest && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rest_details\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"hero_img\",\n          src: specific_rest.img_url,\n          alt: \"rest_img\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chef_n_rest_name\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: specific_rest.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: chef_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"open_now_img\",\n            src: \"/assets/icons/rest_page_icons/open_now.svg\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), specific_rest.hours[0] < new Date().getHours() && specific_rest.hours[1] > new Date().getHours() ? \"Open now\" : \"Closed\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"single_rest_filters\",\n          children: [/*#__PURE__*/_jsxDEV(DishTimeSortingButton, {\n            className: SelectedDishTimeSortingButton == \"breakfast\" ? \"border\" : \"noBorder\",\n            onClick: () => {\n              SetSelectedDishTimeSortingButton(\"breakfast\");\n            },\n            children: \"Breakfast\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DishTimeSortingButton, {\n            className: SelectedDishTimeSortingButton == \"lunch\" ? \"border\" : \"noBorder\",\n            onClick: () => {\n              SetSelectedDishTimeSortingButton(\"lunch\");\n            },\n            children: \"Lunch\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(DishTimeSortingButton, {\n            className: SelectedDishTimeSortingButton == \"dinner\" ? \"border\" : \"noBorder\",\n            onClick: () => {\n              SetSelectedDishTimeSortingButton(\"dinner\");\n            },\n            children: \"Dinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dishes_grid_div\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dishes_grid\",\n          children: dishes.map((dish, index) => {\n            if (dish) {\n              return /*#__PURE__*/_jsxDEV(Card, {\n                onclick: () => {\n                  setDishIdForModal(dish.id);\n                  setShowModal(true);\n                },\n                class: \"small_dish\",\n                img: dish.img_url,\n                name: dish.name,\n                dishDescription: dish.ingredients,\n                price: dish.price\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this);\n            } else {\n              return null;\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), showModal && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-backdrop\",\n        children: /*#__PURE__*/_jsxDEV(Modal, {\n          dish: dishes.find(dish => dish.id == DishIdForModal),\n          show: showModal,\n          onclick: handleCloseModal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n};\n_s(SingleRestaurant, \"tMRMvPKrx9Xa83JTKEqFCRktjic=\", false, function () {\n  return [useSelector, useSelector, useSelector, useParams, useDispatch];\n});\n_c = SingleRestaurant;\nexport default SingleRestaurant;\nvar _c;\n$RefreshReg$(_c, \"SingleRestaurant\");","map":{"version":3,"names":["React","useEffect","useState","Footer","Navbar","DishTimeSortingButton","useDispatch","useSelector","Card","useParams","Modal","fetchDishes","filterDishes","fetchChefs","SingleRestaurant","showModal","setShowModal","DishIdForModal","setDishIdForModal","dishes","state","value","chefs","restaurants","dispatch","rest_id","specific_rest","find","rest","id","chef","restaurant_ids","includes","Number","chef_name","first_name","last_name","handleCloseModal","SelectedDishTimeSortingButton","SetSelectedDishTimeSortingButton","dish_timing","dishes_id_list","dish_ids","img_url","name","hours","Date","getHours","map","dish","index","ingredients","price"],"sources":["C:/Users/Assaf Katz/Desktop/Moveo full-stack course/Projects/epicure-project/frontend/src/components/restaurants/restaurants_components/SingleRestaurant.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport Footer from \"../../homepage/hp-components/footer/Footer\";\r\nimport Navbar from \"../../navbar/Navbar\";\r\nimport { Clean_button, DishTimeSortingButton } from \"../../../typs/buttons/Styled_buttons\";\r\nimport \"./SingleRestaurant.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Card from \"../../homepage/hp-components/card/Card\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport Modal from \"../../modal/Modal\";\r\nimport { RootState } from \"../../../store/store\";\r\nimport {\r\n  IChef,\r\n  IDish,\r\n  IRestaurant,\r\n} from \"../../../typs/interfaces/slicersInterfaces\";\r\nimport { fetchDishes, filterDishes } from \"../../../store/slicers/dishesSilcer\"\r\nimport { fetchChefs } from \"../../../store/slicers/chefsSlicer\";\r\n\r\nconst SingleRestaurant: React.FC = () => {\r\n  \r\n  const [showModal, setShowModal] = useState(false);\r\n  const [DishIdForModal, setDishIdForModal] = useState(0);\r\n    \r\n  const dishes = useSelector((state: RootState) => state.dishes.value);\r\n  const chefs = useSelector((state: RootState) => state.chefs.value);\r\n  const restaurants = useSelector(\r\n    (state: RootState) => state.restaurants.value\r\n  );\r\n\r\n  useEffect(()=>{\r\n    dispatch(fetchChefs())\r\n    dispatch(fetchDishes())\r\n  },[])\r\n\r\n  const rest_id = useParams()[\"single\"] as unknown as number;\r\n\r\n  const specific_rest = restaurants.find(\r\n    (rest: IRestaurant) => rest.id == rest_id\r\n  );\r\n  // const chef = chefs.find((chef: IChef) =>\r\n  //   chef.restaurant_ids.includes(Number(rest_id))\r\n  // );\r\n  const chef = chefs.find((chef: IChef) =>\r\n  chef.restaurant_ids && chef.restaurant_ids.includes(Number(rest_id))\r\n);\r\n\r\n  const chef_name = `${chef?.first_name} ${chef?.last_name}`;\r\n\r\n  const handleCloseModal = () => {\r\n    setShowModal(false);\r\n  };\r\n  const [SelectedDishTimeSortingButton, SetSelectedDishTimeSortingButton] = useState(\"\")\r\n  const dispatch = useDispatch()\r\n\r\n  useEffect( () => {\r\n    dispatch(filterDishes({\r\n      dish_timing : SelectedDishTimeSortingButton,\r\n      dishes_id_list : specific_rest?.dish_ids\r\n    }))\r\n\r\n  }, [SelectedDishTimeSortingButton] )\r\n  return (\r\n    <>\r\n      {specific_rest && (\r\n        <>\r\n          <Navbar />\r\n          <div className=\"rest_details\">\r\n            <img className=\"hero_img\" src={specific_rest.img_url} alt=\"rest_img\" />\r\n            <div className=\"chef_n_rest_name\">\r\n              <h3>{specific_rest.name}</h3>\r\n              <h2>{chef_name}</h2>\r\n            </div>\r\n            <h1>\r\n              <img className=\"open_now_img\" src=\"/assets/icons/rest_page_icons/open_now.svg\" />\r\n              \r\n              {specific_rest.hours[0] < new Date().getHours() &&\r\n              specific_rest.hours[1] > new Date().getHours()\r\n                ? \"Open now\"\r\n                : \"Closed\"}\r\n            </h1>\r\n\r\n            <div className=\"single_rest_filters\">\r\n              <DishTimeSortingButton className={(SelectedDishTimeSortingButton == \"breakfast\") ? \"border\" : \"noBorder\"} onClick={() =>{ SetSelectedDishTimeSortingButton(\"breakfast\") }}>Breakfast</DishTimeSortingButton>\r\n              <DishTimeSortingButton className={(SelectedDishTimeSortingButton == \"lunch\") ?  \"border\" : \"noBorder\"} onClick={() =>{ SetSelectedDishTimeSortingButton(\"lunch\") }}>Lunch</DishTimeSortingButton>\r\n              <DishTimeSortingButton className={(SelectedDishTimeSortingButton == \"dinner\") ?  \"border\" : \"noBorder\"} onClick={() =>{ SetSelectedDishTimeSortingButton(\"dinner\") }}>Dinner</DishTimeSortingButton>\r\n            </div>\r\n          </div>\r\n          <div className=\"dishes_grid_div\">\r\n            <div className=\"dishes_grid\">\r\n              {dishes.map((dish: IDish, index: number) => {\r\n                if (dish) {\r\n                  return (\r\n                    <Card\r\n                      key={index}\r\n                      onclick={() => {\r\n                        setDishIdForModal(dish.id);\r\n                        setShowModal(true);\r\n                      }}\r\n                      class=\"small_dish\"\r\n                      img={dish.img_url}\r\n                      name={dish.name}\r\n                      dishDescription={dish.ingredients}\r\n                      price={dish.price}\r\n                    />\r\n                  );\r\n                } else {\r\n                  return null;\r\n                }\r\n              })}\r\n            </div>\r\n          </div>\r\n          <Footer />\r\n          {showModal && (\r\n            <div className=\"modal-backdrop\">\r\n              <Modal\r\n                dish={dishes.find((dish: IDish) => dish.id == DishIdForModal)}\r\n                show={showModal}\r\n                onclick={handleCloseModal}\r\n              />\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SingleRestaurant;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}