{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\n// import data from \"../../data/data.json\";\n\nexport const restaurantsSlice = createSlice({\n  name: \"restaurants\",\n  initialState: {\n    initialValue: [],\n    value: []\n  },\n  reducers: {\n    filter: (state, action) => {\n      switch (action.payload) {\n        case \"all\":\n          state.value = state.initialValue;\n          break;\n        case \"new\":\n          state.value = state.initialValue.filter(rest => rest.opening_year >= new Date().getFullYear());\n          break;\n        case \"most_popular\":\n          state.value = state.initialValue.filter(rest => rest.rating > 4);\n          break;\n        case \"open_now\":\n          state.value = state.initialValue.filter(rest => rest.hours[0] < new Date().getHours() && rest.hours[1] > new Date().getHours());\n          break;\n      }\n    }\n  }\n});\nexport const {\n  filter\n} = restaurantsSlice.actions;\nexport default restaurantsSlice.reducer;","map":{"version":3,"names":["createSlice","restaurantsSlice","name","initialState","initialValue","value","reducers","filter","state","action","payload","rest","opening_year","Date","getFullYear","rating","hours","getHours","actions","reducer"],"sources":["C:/Users/Assaf Katz/Desktop/Moveo full-stack course/Projects/epicure-project/frontend/src/store/slicers/restaurantsSlicer.tsx"],"sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { IRestaurant } from \"../../typs/interfaces/slicersInterfaces\";\r\n// import data from \"../../data/data.json\";\r\n\r\nexport const restaurantsSlice = createSlice({\r\n  name: \"restaurants\",\r\n  initialState: {\r\n    initialValue: [],\r\n    value: [],\r\n  },\r\n  reducers: {\r\n    filter: (state, action) => {\r\n      switch (action.payload) {\r\n        case \"all\":\r\n          state.value = state.initialValue;\r\n          break;\r\n        case \"new\":\r\n          state.value = state.initialValue.filter(\r\n            (rest : IRestaurant) => rest.opening_year >= new Date().getFullYear()\r\n          );\r\n          break;\r\n        case \"most_popular\":\r\n          state.value = state.initialValue.filter((rest : IRestaurant) => rest.rating > 4);\r\n          break;\r\n        case \"open_now\":\r\n          state.value = state.initialValue.filter(\r\n            (rest : IRestaurant) =>\r\n              rest.hours[0] < new Date().getHours() &&\r\n              rest.hours[1] > new Date().getHours()\r\n          );\r\n          break;\r\n      }\r\n    },\r\n  },\r\n});\r\n\r\nexport const { filter } = restaurantsSlice.actions;\r\n\r\nexport default restaurantsSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C;;AAEA,OAAO,MAAMC,gBAAgB,GAAGD,WAAW,CAAC;EAC1CE,IAAI,EAAE,aAAa;EACnBC,YAAY,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE;EACT,CAAC;EACDC,QAAQ,EAAE;IACRC,MAAM,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MACzB,QAAQA,MAAM,CAACC,OAAO;QACpB,KAAK,KAAK;UACRF,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACJ,YAAY;UAChC;QACF,KAAK,KAAK;UACRI,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACJ,YAAY,CAACG,MAAM,CACpCI,IAAkB,IAAKA,IAAI,CAACC,YAAY,IAAI,IAAIC,IAAI,EAAE,CAACC,WAAW,EAAE,CACtE;UACD;QACF,KAAK,cAAc;UACjBN,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACJ,YAAY,CAACG,MAAM,CAAEI,IAAkB,IAAKA,IAAI,CAACI,MAAM,GAAG,CAAC,CAAC;UAChF;QACF,KAAK,UAAU;UACbP,KAAK,CAACH,KAAK,GAAGG,KAAK,CAACJ,YAAY,CAACG,MAAM,CACpCI,IAAkB,IACjBA,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC,GAAG,IAAIH,IAAI,EAAE,CAACI,QAAQ,EAAE,IACrCN,IAAI,CAACK,KAAK,CAAC,CAAC,CAAC,GAAG,IAAIH,IAAI,EAAE,CAACI,QAAQ,EAAE,CACxC;UACD;MAAM;IAEZ;EACF;AACF,CAAC,CAAC;AAEF,OAAO,MAAM;EAAEV;AAAO,CAAC,GAAGN,gBAAgB,CAACiB,OAAO;AAElD,eAAejB,gBAAgB,CAACkB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}