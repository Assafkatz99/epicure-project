{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\nexport const fetchDishes = createAsyncThunk(\"chefs/fetchChefs\", async () => {\n  const response = await axios.get(\"http://localhost:8000/api/dishes/\");\n  return response.data;\n});\nexport const dishesSlice = createSlice({\n  name: \"dishes\",\n  initialState: {\n    initialValue: [],\n    value: [],\n    current_dishes: []\n  },\n  reducers: {\n    filterDishes: (state, action) => {\n      state.value = state.initialValue.filter(dish => action.payload.dishes_id_list.includes(dish.id));\n      switch (action.payload.dish_timing) {\n        case \"breakfast\":\n          state.value = state.value.filter(dish => dish.dishTiming.breakfast);\n          break;\n        case \"lunch\":\n          state.value = state.value.filter(dish => dish.dishTiming.lunch);\n          break;\n        case \"dinner\":\n          state.value = state.value.filter(dish => dish.dishTiming.dinner);\n          break;\n        case \"\":\n          break;\n      }\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchDishes.pending, (state, action) => {}).addCase(fetchDishes.fulfilled, (state, action) => {\n      state.value = action.payload;\n      state.initialValue = action.payload;\n      console.log(action.payload);\n      console.log(\"WORKED\");\n    }).addCase(fetchDishes.rejected, (state, action) => {\n      console.log(\"rejected\");\n      // state.isLoading = false;\n      //console.log(action.error.message);\n    });\n  }\n});\n\nexport const {\n  filterDishes\n} = dishesSlice.actions;\nexport default dishesSlice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","fetchDishes","response","get","data","dishesSlice","name","initialState","initialValue","value","current_dishes","reducers","filterDishes","state","action","filter","dish","payload","dishes_id_list","includes","id","dish_timing","dishTiming","breakfast","lunch","dinner","extraReducers","builder","addCase","pending","fulfilled","console","log","rejected","actions","reducer"],"sources":["C:/Users/Assaf Katz/Desktop/Moveo full-stack course/Projects/epicure-project/frontend/src/store/slicers/dishesSilcer.tsx"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\n\r\nexport const fetchDishes: any = createAsyncThunk(\r\n  \"chefs/fetchChefs\",\r\n  async () => {\r\n    const response = await axios.get(\"http://localhost:8000/api/dishes/\");\r\n    return response.data;\r\n  }\r\n);\r\n\r\nexport const dishesSlice = createSlice({\r\n  name: \"dishes\",\r\n  initialState: {\r\n    initialValue: [],\r\n    value: [],\r\n    current_dishes: [],\r\n  },\r\n  reducers: {\r\n    filterDishes: (state, action) => {\r\n      state.value = state.initialValue.filter(dish => action.payload.dishes_id_list.includes(dish.id));\r\n\r\n      switch (action.payload.dish_timing) {\r\n        case \"breakfast\":\r\n          state.value = state.value.filter(dish => dish.dishTiming.breakfast)\r\n          break;\r\n          case \"lunch\":\r\n          state.value = state.value.filter(dish => dish.dishTiming.lunch)\r\n          break;\r\n          case \"dinner\":\r\n          state.value = state.value.filter(dish => dish.dishTiming.dinner)\r\n          break;\r\n          case \"\":\r\n          break;\r\n            }\r\n},\r\n  },\r\n  extraReducers: (builder) => {\r\n    builder\r\n      .addCase(fetchDishes.pending, (state, action) => {\r\n        \r\n      })\r\n      .addCase(fetchDishes.fulfilled, (state, action) => {\r\n        state.value = action.payload;\r\n        state.initialValue = action.payload;\r\n        console.log(action.payload);\r\n        console.log(\"WORKED\");\r\n      })\r\n      .addCase(fetchDishes.rejected, (state, action) => {\r\n        console.log(\"rejected\");\r\n        // state.isLoading = false;\r\n        //console.log(action.error.message);\r\n      });\r\n  },\r\n});\r\n\r\nexport const { filterDishes } = dishesSlice.actions;\r\nexport default dishesSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,WAAgB,GAAGH,gBAAgB,CAC9C,kBAAkB,EAClB,YAAY;EACV,MAAMI,QAAQ,GAAG,MAAMF,KAAK,CAACG,GAAG,CAAC,mCAAmC,CAAC;EACrE,OAAOD,QAAQ,CAACE,IAAI;AACtB,CAAC,CACF;AAED,OAAO,MAAMC,WAAW,GAAGN,WAAW,CAAC;EACrCO,IAAI,EAAE,QAAQ;EACdC,YAAY,EAAE;IACZC,YAAY,EAAE,EAAE;IAChBC,KAAK,EAAE,EAAE;IACTC,cAAc,EAAE;EAClB,CAAC;EACDC,QAAQ,EAAE;IACRC,YAAY,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC/BD,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACL,YAAY,CAACO,MAAM,CAACC,IAAI,IAAIF,MAAM,CAACG,OAAO,CAACC,cAAc,CAACC,QAAQ,CAACH,IAAI,CAACI,EAAE,CAAC,CAAC;MAEhG,QAAQN,MAAM,CAACG,OAAO,CAACI,WAAW;QAChC,KAAK,WAAW;UACdR,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACM,UAAU,CAACC,SAAS,CAAC;UACnE;QACA,KAAK,OAAO;UACZV,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACM,UAAU,CAACE,KAAK,CAAC;UAC/D;QACA,KAAK,QAAQ;UACbX,KAAK,CAACJ,KAAK,GAAGI,KAAK,CAACJ,KAAK,CAACM,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACM,UAAU,CAACG,MAAM,CAAC;UAChE;QACA,KAAK,EAAE;UACP;MAAM;IAEhB;EACE,CAAC;EACDC,aAAa,EAAGC,OAAO,IAAK;IAC1BA,OAAO,CACJC,OAAO,CAAC3B,WAAW,CAAC4B,OAAO,EAAE,CAAChB,KAAK,EAAEC,MAAM,KAAK,CAEjD,CAAC,CAAC,CACDc,OAAO,CAAC3B,WAAW,CAAC6B,SAAS,EAAE,CAACjB,KAAK,EAAEC,MAAM,KAAK;MACjDD,KAAK,CAACJ,KAAK,GAAGK,MAAM,CAACG,OAAO;MAC5BJ,KAAK,CAACL,YAAY,GAAGM,MAAM,CAACG,OAAO;MACnCc,OAAO,CAACC,GAAG,CAAClB,MAAM,CAACG,OAAO,CAAC;MAC3Bc,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACvB,CAAC,CAAC,CACDJ,OAAO,CAAC3B,WAAW,CAACgC,QAAQ,EAAE,CAACpB,KAAK,EAAEC,MAAM,KAAK;MAChDiB,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;MACvB;MACA;IACF,CAAC,CAAC;EACN;AACF,CAAC,CAAC;;AAEF,OAAO,MAAM;EAAEpB;AAAa,CAAC,GAAGP,WAAW,CAAC6B,OAAO;AACnD,eAAe7B,WAAW,CAAC8B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}